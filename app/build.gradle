apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply greenDao plugin
apply from: 'and-res-guard.gradle'

def key = file('F:\\Keystore\\tianma.jks')

def keyProps = new Properties()
keyProps.load(new FileInputStream("app\\signature.properties"))

def static releaseTime() {
    return new Date().format("yyMMdd", TimeZone.default)
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.github.tianma8023.xposed.smscode"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 30
        versionName "2.0.1 alpha"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "LOG_TAG", "\"T-SmsCode\"")
        buildConfigField("int", "MODULE_VERSION", "30")

        vectorDrawables.generatedDensities = ['hdpi']

        resConfigs("en", "zh-rCN", "zh-rTW")
    }

    signingConfigs {
        release {
            storeFile key
            storePassword keyProps['STORE_PASSWORD']
            keyAlias keyProps['KEY_ALIAS']
            keyPassword keyProps['KEY_PASSWORD']
        }
    }

    buildTypes {
        debug {
            buildConfigField("int", "LOG_LEVEL", "2")
            buildConfigField("boolean", "LOG_TO_XPOSED", "true")
            buildConfigField("boolean", "LOG_TO_EDXPOSED", "true")

            if (key.exists()) {
                println "using tianma's keystore"
                signingConfig signingConfigs.release
            } else {
                println "using no keystore"
            }
        }

        release {
            minifyEnabled true
            shrinkResources true

            buildConfigField("int", "LOG_LEVEL", "4")
            buildConfigField("boolean", "LOG_TO_XPOSED", "true")
            buildConfigField("boolean", "LOG_TO_EDXPOSED", "true")
            if (key.exists()) {
                println "using tianma's keystore"
                signingConfig signingConfigs.release
            } else {
                println "using no keystore"
            }

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            lintOptions {
                disable 'MissingTranslation'
            }
        }
    }

    applicationVariants.all { variant ->
//        variant.outputs.all { output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith(".apk")) {
//                def fileName = ""
//                if (variant.buildType.name == 'release') {
//                    fileName = "XposedSmsCode_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}_r.apk"
//                } else if (variant.buildType.name == 'debug') {
//                    fileName = "XposedSmsCode_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}_d.apk"
//                }
//                outputFileName = fileName
//            }
//        }
        variant.outputs.all { output ->
            output.outputFileName = "XposedSmsCode_v${variant.versionName}_${releaseTime()}_${variant.productFlavors[0].name}_${variant.buildType.name.charAt(0)}.apk"
        }
    }

    flavorDimensions "type"

    productFlavors {
        coolapk {
            dimension "type"
        }
        xposed {
            dimension "type"
        }
        github {
            dimension "type"
        }
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_NAME: name]
    }
}

greendao {
    schemaVersion 6
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:design:27.1.1' // material design support
    implementation 'com.android.support:recyclerview-v7:27.1.1' // recycler view
    implementation 'com.android.support:cardview-v7:27.1.1' // card view
    implementation 'com.android.support:customtabs:27.1.1' // custom tabs
    implementation 'com.android.support:preference-v7:27.1.1' // preference support


    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // ButterKnife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // Xposed
    compileOnly 'de.robv.android.xposed:api:82'
    compileOnly 'de.robv.android.xposed:api:82:sources'

    // Remote Preferences
    implementation "com.crossbowffs.remotepreferences:remotepreferences:0.5"

    // Material Dialogs
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'

    // Android Shell
    implementation 'com.jaredrummler:android-shell:1.0.0'

    // umeng analyze
    implementation 'com.umeng.sdk:common:latest.integration'
    implementation 'com.umeng.sdk:analytics:latest.integration'

    // EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    // GreenDao
    implementation 'org.greenrobot:greendao:3.2.2'
    // GreenDao Upgrade Helper
    implementation 'com.github.yuweiguocn:GreenDaoUpgradeHelper:v2.1.0'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // tencent bugly
    implementation 'com.tencent.bugly:crashreport:latest.release'
}
